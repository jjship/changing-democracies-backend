name: Deploy

on:
  push:
    branches: [main] # or your production branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts  # Add this line

      - name: Test SSH Connection
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          echo "Testing SSH connection..."
          ssh -i ~/.ssh/deploy_key -v $VM_USER@$VM_HOST 'echo "SSH connection successful"'

      - name: Deploy to VM
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ssh -i ~/.ssh/deploy_key $VM_USER@$VM_HOST '
            # Check Docker permissions
            groups
             docker ps || { echo "Docker permission error"; exit 1; }
            set -ex
            echo "Starting deployment..."
            pwd
            ls -la

            # Configure Git
            git config --global credential.helper store
            echo "https://oauth2:${GITHUB_TOKEN}@github.com" > ~/.git-credentials
            
            # Navigate to app directory
            cd /opt/cd_backend || exit 1
            pwd
            ls -la
            
            # Pull latest changes
            if [ -d ".git" ]; then
              git pull
            else
              git clone ${{ github.server_url }}/${{ github.repository }} .
            fi
            
            # Ensure scripts are executable
            chmod +x scripts/load-env.sh scripts/deploy.sh
            
            # Run deployment script
            ./scripts/deploy.sh
            
            echo "Deployment completed"
          '
